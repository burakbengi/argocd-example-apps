# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# To configure this workflow:
#
# 1. Set the following secrets in your repository (instructions for getting these 
#    https://github.com/Azure/login#configure-a-service-principal-with-a-federated-credential-to-use-oidc-based-authentication):
#    - AZURE_CLIENT_ID
#    - AZURE_TENANT_ID
#    - AZURE_SUBSCRIPTION_ID
#    - AZURE_CONTAINER_REGISTRY
#    - RESOURCE_GROUP
#
# 2. Set the following environment variables (or replace the values below):
#    - CONTAINER_NAME (name of the container image you would like to push up to your ACR)

name: Build and deploy an app to AKS

on:
#  push:
#    branches:
#      - main
  workflow_dispatch:

env:
  CONTAINER_NAME: "Wannabe OBS Director"

jobs:
  build:
    permissions:
      actions: read
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
    # Checks out the repository this file is in
    - uses: actions/checkout@master
    
    # Logs in with your Azure credentials
    - name: Azure login
      uses: azure/login@v1.4.3
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
    # Builds and pushes an image up to your Azure Container Registry
    - name: Build and push image to ACR
      run: |
        az acr build --image ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ secrets.AZURE_CONTAINER_REGISTRY }} -g ${{ secrets.RESOURCE_GROUP }} .
